<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidaiai.mapper.SchedulingMapper">
  <resultMap id="BaseResultMap" type="com.qidaiai.domain.Scheduling">
    <!--@mbg.generated-->
    <!--@Table his_scheduling-->
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="scheduling_day" jdbcType="VARCHAR" property="schedulingDay" />
    <result column="subsection_type" jdbcType="CHAR" property="subsectionType" />
    <result column="scheduling_type" jdbcType="CHAR" property="schedulingType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, dept_id, scheduling_day, subsection_type, scheduling_type, create_time, 
    create_by
  </sql>
  <insert id="insert" parameterType="com.qidaiai.domain.Scheduling">
    <!--@mbg.generated-->
    insert into his_scheduling (user_id, dept_id, scheduling_day, 
      subsection_type, scheduling_type, create_time, 
      create_by)
    values (#{userId,jdbcType=BIGINT}, #{deptId,jdbcType=BIGINT}, #{schedulingDay,jdbcType=VARCHAR}, 
      #{subsectionType,jdbcType=CHAR}, #{schedulingType,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qidaiai.domain.Scheduling">
    <!--@mbg.generated-->
    insert into his_scheduling
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="schedulingDay != null">
        scheduling_day,
      </if>
      <if test="subsectionType != null">
        subsection_type,
      </if>
      <if test="schedulingType != null">
        scheduling_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="schedulingDay != null">
        #{schedulingDay,jdbcType=VARCHAR},
      </if>
      <if test="subsectionType != null">
        #{subsectionType,jdbcType=CHAR},
      </if>
      <if test="schedulingType != null">
        #{schedulingType,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="selectList" resultMap="BaseResultMap">
    select * from his_scheduling ${ew.customSqlSegment}
  </select>

  <select id="queryHasSchedulingDeptIds" resultType="java.lang.Long">
    select distinct dept_id from his_scheduling
    <where>
      <choose>
        <when test="deptId != null and deptId != ''">
          dept_id = #{deptId}
        </when>
        <otherwise>
          1 = 1
        </otherwise>
      </choose>
      <choose>
        <when test="schedulingType != null and schedulingType != ''">
          and scheduling_type = #{schedulingType}
        </when>
        <otherwise>
          and scheduling_type != null
        </otherwise>
      </choose>
      <choose>
        <when test="schedulingDay != null and schedulingDay != ''">
          and scheduling_day=#{schedulingDay}
        </when>
        <otherwise>
          and scheduling_day != null
        </otherwise>
      </choose>
      <choose>
        <when test="subsectionType != null and subsectionType != ''">
          and  subsection_type=#{subsectionType}
        </when>
        <otherwise>
          and subsection_type != null
        </otherwise>
      </choose>
    </where>
  </select>

  <delete id="deleteBySql">
    delete from his_scheduling where user_id = #{userId} and dept_id = #{deptId} and scheduling_day <![CDATA[>=]]> #{beginDate} and scheduling_day <![CDATA[<=]]> #{endDate}
  </delete>
</mapper>