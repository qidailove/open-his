<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidaiai.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.qidaiai.domain.Role">
    <!--@mbg.generated-->
    <!--@Table sys_role-->
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_sort" jdbcType="INTEGER" property="roleSort" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    role_id, role_name, role_code, role_sort, remark, `status`, create_time, update_time, 
    create_by, update_by
  </sql>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="role_id" keyProperty="roleId" parameterType="com.qidaiai.domain.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_role (role_name, role_code, role_sort, 
      remark, `status`, create_time, 
      update_time, create_by, update_by
      )
    values (#{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, #{roleSort,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="role_id" keyProperty="roleId" parameterType="com.qidaiai.domain.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="roleSort != null">
        role_sort,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null">
        #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qidaiai.domain.Role">
    <!--@mbg.generated-->
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null">
        role_sort = #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateById" parameterType="com.qidaiai.domain.Role">
    <!--@mbg.generated-->
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      role_sort = #{roleSort,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>

  <select id="selectPage" resultMap="BaseResultMap">
    select * from sys_role ${ew.customSqlSegment}
  </select>

  <select id="selectRoleIdsByUserId" resultType="java.lang.Long">
    select * from sys_role_user where user_id = #{userId}
  </select>


  <delete id="deleteRoleMenuByRoleIds" >
    delete from sys_role_menu
    <where>
      <foreach collection="ids" open="(" separator="," close=")" item="role_menu_id" index="index">
        #{role_menu_id}
      </foreach>
    </where>
  </delete>

  <delete id="deleteRoleUserByRoleIds">
    delete from sys_role_user
    <where>
      <foreach collection="ids" open="(" separator="," close=")" item="role_user_id" index="index">
        #{role_user_id}
      </foreach>
    </where>
  </delete>

  <delete id="deleteRoleUserByUserIds">
    delete from sys_role_user
    <where>
      <foreach collection="ids" item="role_user_id" index="index" open="(" close=")" separator=",">
        #{role_user_id}
      </foreach>
    </where>
  </delete>

  <delete id="deleteRoleMenuByMenuIds">
    delete from sys_role_menu
    <where>
      <foreach collection="ids" item="role_menu_id" index="index" open="(" close=")" separator=",">
        #{role_menu_id}
      </foreach>
    </where>
  </delete>

  <insert id="saveRoleMenu" parameterType="java.lang.Long">
    insert  into sys_role_menu(role_id, menu_id) values(#{roleId},#{menuId})
  </insert>

  <insert id="saveRoleUser">
    insert into sys_role_user(user_id, role_id) values (#{userId}, #{roleId})
  </insert>

  <delete id="deleteBatchIds">
    delete from sys_role where role_id in
    <foreach collection="coll" index="index" item="role_id" open="(" close=")" separator=",">
      #{role_id}
    </foreach>
  </delete>
</mapper>